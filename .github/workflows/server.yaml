name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SW5wbGJtRnJkVEEzSWl3aVVrVlFUeUk2SWxwcGJtbHRZWEoxSWl3aVZFZGZRVkJKWDBsRUlqb2lNVFkxTkRZeU56QWlMQ0pVUjE5QlVFbGZTRUZUU0NJNklqRmxNV1ZtTVdKaVlqWmxPR00yWW1NNU1EQXlNRGRqWVRWaE1URmpaalppSWl3aVZFZGZRazlVWDFSUFMwVk9Jam9pTnprek56a3lOVEkzTmpwQlFVVmZSbmd4UkRKMU1qRkpaMVU0TldSSlUwUk5VMGhGYkZscGNFaFFRVVZaVFNJc0lrWkpURVVpT2pJMU9Td2lSa2xNUlY5T1FVMUZJam9pVzFNd01TMHdOMTBnUW1Wb1pXNWxhMjhnV3pFd09EQndYU0JiVTNWaVhTQkFRVzVwYldWelgwOWpaV0Z1TG0xcmRpSXNJa2xFSWpvaVFtVm9YMkl6WmpFMVBUQTlNVEE0TUhBaUxDSkRUVVFpT2lKYWJWcDBZMGRXYmtsRE1YQkpTSFJ3WW13NWJXRlhlR3htVTBGMFdtMXNjMlJIVm5sWU1rNTJZbGhDYzFwWVoyZEpiVko1V1Zoa01GcFlhREJRVjFwMlltNVNiV0ZYZUd4UVYyZDFaRWhTYlU5dVVteGxTRkU1U25sQ1FWRlhOWEJpVjFaNldEQTVhbHBYUm5WSlEyTTJXbTA1ZFdSSFRuWmlSemw1VUZoa2IyRllVbXhQYlZwMlltNVNlbUZZY0d4UVZFa3dUMjVuT1UxVVFUWmxWREI0VFVSd2JHSnRSbWxpUjFVNVNqSktiR1JJWkd4YVZ6UnZaRU4zZDB4RVZYZE5RMnR1VDIxR2MyTkhhR2hRVTJSd1dtbG9jMlJEYURCTVJGRTFUMU5yYzAxVGVIQmFhV2h6WkVOb01FeEVWWGROUTJ0elMwUkZkRXRJVVhST1JHczFTMU5yZGsxVGQzZExVMnRwU1VNeGRGbFlRV2ROUTBGMFlsZFdNRmxYVW1oa1IwVTJZM3B3YUVsSVVuQmtSM2hzVUZOS1FWRlhOWEJpVjFaNldEQTVhbHBYUm5WSmFVRjBZbGRXTUZsWFVtaGtSMFUyWTNwd2VrbElVbkJrUjNoc1VGTktRVkZYTlhCaVYxWjZXREE1YWxwWFJuVkphVUYwWWxkV01GbFhVbWhrUjBWblpFZHNNR0pIVlRsSmEwSkNZbTFzZEZwWVRtWlVNazVzV1ZjMGFVbERNV3BQYmxsbllrZHNhV1ZFU1RKT1EwRjBZMGhLYkdNeVZqQkpSMXBvWXpOU2JHTnBRWFJaTTBwdFNVUkpla2xETVc1SlJFa3dUVU5CZEdONVFYaFBWRWwzWlVSRmQwOUVRV2RNV0VKd1pVWTViV0pZVVdkbFdGWXlUa1JKZDJORFFYUlplbkJvU1VkR2FGbDVRWFJaYW5Cb1NVUmpkMkY1UVhSWlYwMW5UV2xCZEZsNmNIcEpSMDUyWTBocloyVXlPWGRZTWxwd1lrZFdPVWxETVRVaUxDSlVTRlZOUWs1QlNVd2lPaUl5TlRnaUxDSkJWVlJJVDFJaU9pSTJOamN5TnpVeU1UYzNJbjA9
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
