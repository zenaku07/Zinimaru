name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SW5wbGJtRnJkVEEzSWl3aVVrVlFUeUk2SWxwcGJtbHRZWEoxSWl3aVZFZGZRVkJKWDBsRUlqb2lNVFkxTkRZeU56QWlMQ0pVUjE5QlVFbGZTRUZUU0NJNklqRmxNV1ZtTVdKaVlqWmxPR00yWW1NNU1EQXlNRGRqWVRWaE1URmpaalppSWl3aVZFZGZRazlVWDFSUFMwVk9Jam9pTWpBd09EWTFOalk0TVRwQlFVZFhSVFptWlROelZXNU9Ta1k0UTFSVk1uWkpibkJaUjJ4VU1YSkRVVW8zTUNJc0lrWkpURVVpT2prd0xDSkdTVXhGWDA1QlRVVWlPaUpiVXpFdFJUWmRJRk52TENCSklHTmhiaWQwSUhCc1lYa2dhQ0JiTVRBNE1IQmRJRnRUZFdKZElFQkJibWx0WlhOZlQyTmxZVzR1Yld0Mklpd2lTVVFpT2lKVGJ5eGZabUUwTXpROU5UMHhNRGd3Y0NJc0lrTk5SQ0k2SWxwdFduUmpSMVp1U1VNeGNFbElkSEJpYkRsdFlWZDRiR1pUUVhSYWJXeHpaRWRXZVZneVRuWmlXRUp6V2xoblowbHRVbmxaV0dRd1dsaG9NRkJYV25aaWJsSnRZVmQ0YkZCWFozVmtTRkp0VDI1U2JHVklVVGxLZVVKQlVWYzFjR0pYVm5wWU1EbHFXbGRHZFVsRFl6WmFiVGwxWkVkT2RtSkhPWGxRV0dSdllWaFNiRTl0V25aaWJsSjZZVmh3YkZCVVNUQlBibWM1VFZSQk5tVlVNSGhOUkhCc1ltMUdhV0pIVlRsS01rcHNaRWhrYkZwWE5HOWtRM2QzVEVSVmQwMURhMjVQYlVaelkwZG9hRkJUWkhCYWFXaHpaRU5vTUV4RVVUVlBVMnR6VFZONGNGcHBhSE5rUTJnd1RFUlZkMDFEYTNOTFJFVjBTMGhSZEU1RWF6VkxVMnQyVFZOM2QwdFRhMmxKUXpGMFdWaEJaMDFEUVhSaVYxWXdXVmRTYUdSSFJUWmplbkJvU1VoU2NHUkhlR3hRVTBwQlVWYzFjR0pYVm5wWU1EbHFXbGRHZFVscFFYUmlWMVl3V1ZkU2FHUkhSVFpqZW5CNlNVaFNjR1JIZUd4UVUwcEJVVmMxY0dKWFZucFlNRGxxV2xkR2RVbHBRWFJpVjFZd1dWZFNhR1JIUldka1Iyd3dZa2RWT1VsclFrSmliV3gwV2xoT1psUXlUbXhaVnpScFNVTXhhazl1V1dkaVIyeHBZek5hTUZsWVdYaEpRekYzWTIxV2VscFlVV2RPYVVGMFdubEJlVTVFUVdkTVdFMW5UVlJyZVUxSVozaE5SR2QzU1VNeGQyRllhR1phYlRFd1NVaHNNV1JxVVhsTlNFRm5URmhPTW1SSFJqSk5VekYzV1ZoS2FHSllUV2RrU0ZaMVdsUXdlRTl0V25CaVJ6QjBXak5LYUdGWE5EbE5RMEYwV1ROS2JVbEVVVEJKUXpGellqSmtjMXBZV214aVEwSnNZMjVLZG1OcFFYUlplbkJvU1VkNGNGbHRPWGRrV0UxblRGZEdha2xFU1dkTVYwWnBTVVJSZDJGNVFYUlplbkI2U1VkT2RtTklhMmRsTWpsM1dESmFjR0pIVmpsSlF6RTFJaXdpVkVoVlRVSk9RVWxNSWpvNE5IMD0=
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
