name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SW5wbGJtRnJkVEEzSWl3aVVrVlFUeUk2SWxwcGJtbHRZWEoxSWl3aVZFZGZRVkJKWDBsRUlqb2lNVFkxTkRZeU56QWlMQ0pVUjE5QlVFbGZTRUZUU0NJNklqRmxNV1ZtTVdKaVlqWmxPR00yWW1NNU1EQXlNRGRqWVRWaE1URmpaalppSWl3aVZFZGZRazlVWDFSUFMwVk9Jam9pTnprek56a3lOVEkzTmpwQlFVVmZSbmd4UkRKMU1qRkpaMVU0TldSSlUwUk5VMGhGYkZscGNFaFFRVVZaVFNJc0lrWkpURVVpT2pFNE1pd2lSa2xNUlY5T1FVMUZJam9pVzFNd01TMHdOVjBnVjI5eWRHaHNaWE56SUVGd2NISmhhWE5sY2lCYk1UQTRNSEJkSUZ0RWRXRnNYU0JBUVc1cGJXVnpYMDlqWldGdUxtMXJkaUlzSWtsRUlqb2lWMjl5WHprME5tVmtQVEE5TVRBNE1IQWlMQ0pEVFVRaU9pSmFiVnAwWTBkV2JrbERNWEJKU0hSd1ltdzViV0ZYZUd4bVUwRjBXbTFzYzJSSFZubFlNazUyWWxoQ2MxcFlaMmRKYlZKNVdWaGtNRnBZYURCUVYxcDJZbTVTYldGWGVHeFFWMmQxWkVoU2JVOXVVbXhsU0ZFNVNubENRVkZYTlhCaVYxWjZXREE1YWxwWFJuVkpRMk0yV20wNWRXUkhUblppUnpsNVVGaGtiMkZZVW14UGJWcDJZbTVTZW1GWWNHeFFWRWt3VDI1bk9VMVVRVFpsVkRCNFRVUndiR0p0Um1saVIxVTVTakpLYkdSSVpHeGFWelJ2WkVOM2QweEVWWGROUTJ0dVQyMUdjMk5IYUdoUVUyUndXbWxvYzJSRGFEQk1SRkUxVDFOcmMwMVRlSEJhYVdoelpFTm9NRXhFVlhkTlEydHpTMFJGZEV0SVVYUk9SR3MxUzFOcmRrMVRkM2RMVTJ0cFNVTXhkRmxZUVdkTlEwRjBZbGRXTUZsWFVtaGtSMFUyWTNwd2FFbElVbkJrUjNoc1VGTktRVkZYTlhCaVYxWjZXREE1YWxwWFJuVkphVUYwWWxkV01GbFhVbWhrUjBVMlkzcHdla2xJVW5Ca1IzaHNVRk5LUVZGWE5YQmlWMVo2V0RBNWFscFhSblZKYVVGMFlsZFdNRmxYVW1oa1IwVm5aRWRzTUdKSFZUbEphMEpDWW0xc2RGcFlUbVpVTWs1c1dWYzBhVWxETVdwUGJsbG5Za2RzYVdNeldqQlpXRmw0U1VNeGQyTnRWbnBhV0ZGblRtbEJkRnA1UVhsT1JFRm5URmhOWjAxVWEzbE5TR2Q0VFVSbmQwbERNWGRoV0dobVdtMHhNRWxJYkRGa2FsRjVUVWhCWjB4WVRqSmtSMFl5VFZNeGQxbFlTbWhpV0UxblpFaFdkVnBVTUhoUGJWcHdZa2N3ZEZvelNtaGhWelE1VFVOQmRGa3pTbTFKUkZFd1NVTXhjMkl5WkhOYVdGcHNZa05DYkdOdVNuWmphVUYwV1hwd2FFbEhlSEJaYlRsM1pGaE5aMHhYUm1wSlJFbG5URmRHYVVsRVVYZGhlVUYwV1hwd2VrbEhUblpqU0d0blpUSTVkMWd5V25CaVIxWTVTVU14TlNJc0lsUklWVTFDVGtGSlRDSTZJakU0TVNJc0lrRlZWRWhQVWlJNklqWTJOekkzTlRJeE56Y2lmUT09
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
