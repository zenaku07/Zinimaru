name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SW5wbGJtRnJkVEEzSWl3aVVrVlFUeUk2SWxwcGJtbHRZWEoxSWl3aVZFZGZRVkJKWDBsRUlqb2lNVFkxTkRZeU56QWlMQ0pVUjE5QlVFbGZTRUZUU0NJNklqRmxNV1ZtTVdKaVlqWmxPR00yWW1NNU1EQXlNRGRqWVRWaE1URmpaalppSWl3aVZFZGZRazlVWDFSUFMwVk9Jam9pTnpBd09UYzBOVEUzTWpwQlFVVldVVnB2U1RNeVQzTndRVVoyTVhZeFZWOVhSREZPWDBwRVgxUlROWE5pTkNJc0lrWkpURVVpT2pFek5Td2lSa2xNUlY5T1FVMUZJam9pVzFNd01TMUZNRGRkSUVKdlozVnpJRk5yYVd4c0lGc3hNRGd3Y0YwZ1cxTjFZbDBnUUVGdWFXMWxjMTlQWTJWaGJpNXRhM1lpTENKSlJDSTZJa0p2WjE5bFltTTNOajB3UFRFd09EQndJaXdpUTAxRUlqb2lXbTFhZEdOSFZtNUpRekZ3U1VoMGNHSnNPVzFoVjNoc1psTkJkRnB0YkhOa1IxWjVXREpPZG1KWVFuTmFXR2RuU1cxU2VWbFlaREJhV0dnd1VGZGFkbUp1VW0xaFYzaHNVRmRuZFdSSVVtMVBibEpzWlVoUk9VcDVRa0ZSVnpWd1lsZFdlbGd3T1dwYVYwWjFTVU5qTmxwdE9YVmtSMDUyWWtjNWVWQllaRzloV0ZKc1QyMWFkbUp1VW5waFdIQnNVRlJKTUU5dVp6bE5WRUUyWlZRd2VFMUVjR3hpYlVacFlrZFZPVW95U214a1NHUnNXbGMwYjJSRGQzZE1SRlYzVFVOcmJrOXRSbk5qUjJob1VGTmtjRnBwYUhOa1EyZ3dURVJSTlU5VGEzTk5VM2h3V21sb2MyUkRhREJNUkZWM1RVTnJjMHRFUlhSTFNGRjBUa1JyTlV0VGEzWk5VM2QzUzFOcmFVbERNWFJaV0VGblRVTkJkR0pYVmpCWlYxSm9aRWRGTm1ONmNHaEpTRkp3WkVkNGJGQlRTa0ZSVnpWd1lsZFdlbGd3T1dwYVYwWjFTV2xCZEdKWFZqQlpWMUpvWkVkRk5tTjZjSHBKU0ZKd1pFZDRiRkJUU2tGUlZ6VndZbGRXZWxnd09XcGFWMFoxU1dsQmRHSlhWakJaVjFKb1pFZEZaMlJIYkRCaVIxVTVTV3RDUW1KdGJIUmFXRTVtVkRKT2JGbFhOR2xKUXpGcVQyNVpaMkpIYkdsak0xb3dXVmhaZUVsRE1YZGpiVlo2V2xoUlowNXBRWFJhZVVGNVRrUkJaMHhZVFdkTlZHdDVUVWhuZUUxRVozZEpRekYzWVZob1pscHRNVEJKU0d3eFpHcFJlVTFJUVdkTVdFNHlaRWRHTWsxVE1YZFpXRXBvWWxoTloyUklWblZhVkRCNFQyMWFjR0pITUhSYU0wcG9ZVmMwT1UxRFFYUlpNMHB0U1VSUk1FbERNWE5pTW1SeldsaGFiR0pEUW14amJrcDJZMmxCZEZsNmNHaEpSM2h3V1cwNWQyUllUV2RNVjBacVNVUkpaMHhYUm1sSlJGRjNZWGxCZEZsNmNIcEpSMDUyWTBocloyVXlPWGRZTWxwd1lrZFdPVWxETVRVaUxDSlVTRlZOUWs1QlNVd2lPaUl4TXpRaUxDSkJWVlJJVDFJaU9pSTJOamN5TnpVeU1UYzNJbjA9
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
