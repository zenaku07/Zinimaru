name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SW5wbGJtRnJkVEEzSWl3aVVrVlFUeUk2SWxwcGJtbHRZWEoxSWl3aVZFZGZRVkJKWDBsRUlqb2lNVFkxTkRZeU56QWlMQ0pVUjE5QlVFbGZTRUZUU0NJNklqRmxNV1ZtTVdKaVlqWmxPR00yWW1NNU1EQXlNRGRqWVRWaE1URmpaalppSWl3aVZFZGZRazlVWDFSUFMwVk9Jam9pSWl3aVJrbE1SU0k2TkRBc0lrWkpURVZmVGtGTlJTSTZJbHRUTVVVeVhTQkVZVzVrWVdSaGJpQmJORGd3Y0YwZ1cyUjFZV3hkSUVCQmJtbHRaWE5mVDJObFlXNHViV3QySWl3aVNVUWlPaUpFWVc1ZllUWTJOekE5TVQwME9EQndJaXdpUTAxRUlqb2lXbTFhZEdOSFZtNUpRekZ3U1VoMGNHSnNPVzFoVjNoc1psTkJkRmw2Y0RKSlIzaHdXVzVuZVU1cVZXZE1XR2Q1VG1wVmRHTkhSbmxaVnpGNlNVYzFka3hYYkhWYWJUZzVUVk5CZEdSdFdXZEpiVko1V1Zoa01GcFlhREJRVjFwMlltNVNiV0ZYZUd4UVYyZDFaRWhTYlU5dVVteGxTRkU1U25sQ1ZWSjVRWFJKUlVKcFlraFdiRmt5Um5KYVZqbDFXbGhTTTJJelNuSkpRMk0yV20wNWRXUkhUblppUnpsNVVGaGtiMkZZVW14UGJWcDJZbTVTZW1GWWNHeFFWRWt3VDI1bk9XUjVNVEJhV0dnd1dETmpkRTFxUVRabFZEQjRUVVJ3YkdKdFJtbGlSMVU1U2pKS2JHUklaR3hhVnpSdlpFTjNkMHhFVlhkTlEydHVUMjFHYzJOSGFHaFFVMlJ3V21sb2MyUkRhREJNUkZFMVQxTnJjMDFUZUhCYWFXaHpaRU5vTUV4RVZYZE5RMnR6UzBSRmRFdElVWFJPUkdzMVMxTnJkazFUZDNkTFUydHVTV2xCZEdKWFJuZEpSRUZuVEZjeGJHUkhSbXRaV0ZKb1QyNU5ObGxVYjNkSlNGSndaRWQ0YkZCVFNtSkpSVUpDWW0xc2RGcFlUbVpVTWs1c1dWYzBaMWhUU1dkTVZ6RnNaRWRHYTFsWVVtaFBiazAyWTNwdmQwbElVbkJrUjNoc1VGTktZa2xGUWtKaWJXeDBXbGhPWmxReVRteFpWelJuV0ZOSloweFhNV3hrUjBacldWaFNhRWxJVW5Ca1IzaHNVRk5LWWtsRlFrSmliV3gwV2xoT1psUXlUbXhaVnpSbldGTkJhVWxETVdwamJWbG5UV3BuWjB4WVFuQmxSamx0WWxoUloyVllWakpPUkVsM1kwTkJkR05wUVhsTmVUUTFUbnBaWjB4WVRXZFBSRWwzWlVSUk5FMURRWFJpUnpsdVlrZFdNbHBYZDJkYVdFcDVZak5KWjB4WVFubGFXRTVzWkVOQ2VtSkhPVE5KUXpGcVQyMUZaMkpIYkdsaU0wSXhZM2xCZEZsWFRXZE5hVUYwV1dwd2FFbEVUVEZoZVVGMFdYcHdla2xIVG5aalNHdG5aVEk1ZDFneVduQmlSMVk1U1VNeE5TSjk=
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
